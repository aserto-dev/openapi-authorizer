extensionprops: {}
openapi: 3.0.3
components:
  extensionprops: {}
  schemas:
    apiIdentityContext:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          identity:
            ref: ""
            value:
              extensionprops: {}
              type: string
          type:
            ref: '#/components/schemas/apiIdentityType'
            value:
              extensionprops: {}
              type: string
              description: |-
                Identity types, describes the payload type of the identity field inside the IdentityContext message.

                 - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
                 - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
                 - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
                 - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
                 - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
              enum:
                - IDENTITY_TYPE_UNKNOWN
                - IDENTITY_TYPE_NONE
                - IDENTITY_TYPE_SUB
                - IDENTITY_TYPE_JWT
                - IDENTITY_TYPE_MANUAL
              default: IDENTITY_TYPE_UNKNOWN
    apiIdentityType:
      ref: ""
      value:
        extensionprops: {}
        type: string
        description: |-
          Identity types, describes the payload type of the identity field inside the IdentityContext message.

           - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
           - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
           - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
           - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
           - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
        enum:
          - IDENTITY_TYPE_UNKNOWN
          - IDENTITY_TYPE_NONE
          - IDENTITY_TYPE_SUB
          - IDENTITY_TYPE_JWT
          - IDENTITY_TYPE_MANUAL
        default: IDENTITY_TYPE_UNKNOWN
    apiModule:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          ast:
            ref: ""
            value:
              extensionprops: {}
          id:
            ref: ""
            value:
              extensionprops: {}
              type: string
          package_path:
            ref: ""
            value:
              extensionprops: {}
              type: string
          package_root:
            ref: ""
            value:
              extensionprops: {}
              type: string
          raw:
            ref: ""
            value:
              extensionprops: {}
              type: string
    apiPolicyContext:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          decisions:
            ref: ""
            value:
              extensionprops: {}
              type: array
              title: list (1..N) of policy decisions (aka rules)
              items:
                ref: ""
                value:
                  extensionprops: {}
                  type: string
          path:
            ref: ""
            value:
              extensionprops: {}
              type: string
              title: policy path aka package name
    apiPolicyInstance:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          instance_label:
            ref: ""
            value:
              extensionprops: {}
              type: string
              title: label identifying the instance of the policy
          name:
            ref: ""
            value:
              extensionprops: {}
              type: string
              title: policy name
    protobufAny:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          '@type':
            ref: ""
            value:
              extensionprops: {}
              type: string
    protobufNullValue:
      ref: ""
      value:
        extensionprops: {}
        type: string
        description: |-
          `NullValue` is a singleton enumeration to represent the null value for the
          `Value` type union.

           The JSON representation for `NullValue` is JSON `null`.

           - NULL_VALUE: Null value.
        enum:
          - NULL_VALUE
        default: NULL_VALUE
    rpcStatus:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          code:
            ref: ""
            value:
              extensionprops: {}
              type: integer
              format: int32
          details:
            ref: ""
            value:
              extensionprops: {}
              type: array
              items:
                ref: '#/components/schemas/protobufAny'
                value:
                  extensionprops: {}
                  type: object
                  properties:
                    '@type':
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
          message:
            ref: ""
            value:
              extensionprops: {}
              type: string
    v2CompileRequest:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          disable_inlining:
            ref: ""
            value:
              extensionprops: {}
              type: array
              items:
                ref: ""
                value:
                  extensionprops: {}
                  type: string
          identity_context:
            ref: '#/components/schemas/apiIdentityContext'
            value:
              extensionprops: {}
              type: object
              properties:
                identity:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                type:
                  ref: '#/components/schemas/apiIdentityType'
                  value:
                    extensionprops: {}
                    type: string
                    description: |-
                      Identity types, describes the payload type of the identity field inside the IdentityContext message.

                       - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
                       - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
                       - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
                       - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
                       - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
                    enum:
                      - IDENTITY_TYPE_UNKNOWN
                      - IDENTITY_TYPE_NONE
                      - IDENTITY_TYPE_SUB
                      - IDENTITY_TYPE_JWT
                      - IDENTITY_TYPE_MANUAL
                    default: IDENTITY_TYPE_UNKNOWN
          input:
            ref: ""
            value:
              extensionprops: {}
              type: string
          options:
            ref: '#/components/schemas/v2QueryOptions'
            value:
              extensionprops: {}
              type: object
              properties:
                instrument:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: boolean
                    title: default false
                metrics:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: boolean
                    title: default false
                trace:
                  ref: '#/components/schemas/v2TraceLevel'
                  value:
                    extensionprops: {}
                    type: string
                    title: |-
                      - TRACE_LEVEL_UNKNOWN: Value not set.
                       - TRACE_LEVEL_OFF: ExplainOffV1   ExplainModeV1 = "off"
                       - TRACE_LEVEL_FULL: ExplainFullV1  ExplainModeV1 = "full"
                       - TRACE_LEVEL_NOTES: ExplainNotesV1 ExplainModeV1 = "notes"
                       - TRACE_LEVEL_FAILS: ExplainFailsV1 ExplainModeV1 = "fails"
                    enum:
                      - TRACE_LEVEL_UNKNOWN
                      - TRACE_LEVEL_OFF
                      - TRACE_LEVEL_FULL
                      - TRACE_LEVEL_NOTES
                      - TRACE_LEVEL_FAILS
                    default: TRACE_LEVEL_UNKNOWN
                trace_summary:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: boolean
                    title: default false
          policy_context:
            ref: '#/components/schemas/apiPolicyContext'
            value:
              extensionprops: {}
              type: object
              properties:
                decisions:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: array
                    title: list (1..N) of policy decisions (aka rules)
                    items:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                path:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: policy path aka package name
          policy_instance:
            ref: '#/components/schemas/apiPolicyInstance'
            value:
              extensionprops: {}
              type: object
              properties:
                instance_label:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: label identifying the instance of the policy
                name:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: policy name
          query:
            ref: ""
            value:
              extensionprops: {}
              type: string
          resource_context:
            ref: ""
            value:
              extensionprops: {}
              type: object
          unknowns:
            ref: ""
            value:
              extensionprops: {}
              type: array
              items:
                ref: ""
                value:
                  extensionprops: {}
                  type: string
    v2CompileResponse:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          metrics:
            ref: ""
            value:
              extensionprops: {}
              type: object
          result:
            ref: ""
            value:
              extensionprops: {}
              type: object
          trace:
            ref: ""
            value:
              extensionprops: {}
              type: array
              items:
                ref: ""
                value:
                  extensionprops: {}
                  type: object
          trace_summary:
            ref: ""
            value:
              extensionprops: {}
              type: array
              items:
                ref: ""
                value:
                  extensionprops: {}
                  type: string
    v2Decision:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          decision:
            ref: ""
            value:
              extensionprops: {}
              type: string
          is:
            ref: ""
            value:
              extensionprops: {}
              type: boolean
    v2DecisionTreeOptions:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          path_separator:
            ref: '#/components/schemas/v2PathSeparator'
            value:
              extensionprops: {}
              type: string
              title: |-
                - PATH_SEPARATOR_UNKNOWN: Value not set.
                 - PATH_SEPARATOR_DOT: Dot "." path separator
                 - PATH_SEPARATOR_SLASH: Slash "/" path separtor
              enum:
                - PATH_SEPARATOR_UNKNOWN
                - PATH_SEPARATOR_DOT
                - PATH_SEPARATOR_SLASH
              default: PATH_SEPARATOR_UNKNOWN
    v2DecisionTreeRequest:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          identity_context:
            ref: '#/components/schemas/apiIdentityContext'
            value:
              extensionprops: {}
              type: object
              properties:
                identity:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                type:
                  ref: '#/components/schemas/apiIdentityType'
                  value:
                    extensionprops: {}
                    type: string
                    description: |-
                      Identity types, describes the payload type of the identity field inside the IdentityContext message.

                       - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
                       - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
                       - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
                       - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
                       - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
                    enum:
                      - IDENTITY_TYPE_UNKNOWN
                      - IDENTITY_TYPE_NONE
                      - IDENTITY_TYPE_SUB
                      - IDENTITY_TYPE_JWT
                      - IDENTITY_TYPE_MANUAL
                    default: IDENTITY_TYPE_UNKNOWN
          options:
            ref: '#/components/schemas/v2DecisionTreeOptions'
            value:
              extensionprops: {}
              type: object
              properties:
                path_separator:
                  ref: '#/components/schemas/v2PathSeparator'
                  value:
                    extensionprops: {}
                    type: string
                    title: |-
                      - PATH_SEPARATOR_UNKNOWN: Value not set.
                       - PATH_SEPARATOR_DOT: Dot "." path separator
                       - PATH_SEPARATOR_SLASH: Slash "/" path separtor
                    enum:
                      - PATH_SEPARATOR_UNKNOWN
                      - PATH_SEPARATOR_DOT
                      - PATH_SEPARATOR_SLASH
                    default: PATH_SEPARATOR_UNKNOWN
          policy_context:
            ref: '#/components/schemas/apiPolicyContext'
            value:
              extensionprops: {}
              type: object
              properties:
                decisions:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: array
                    title: list (1..N) of policy decisions (aka rules)
                    items:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                path:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: policy path aka package name
          policy_instance:
            ref: '#/components/schemas/apiPolicyInstance'
            value:
              extensionprops: {}
              type: object
              properties:
                instance_label:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: label identifying the instance of the policy
                name:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: policy name
          resource_context:
            ref: ""
            value:
              extensionprops: {}
              type: object
    v2DecisionTreeResponse:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          path:
            ref: ""
            value:
              extensionprops: {}
              type: object
          path_root:
            ref: ""
            value:
              extensionprops: {}
              type: string
    v2GetPolicyResponse:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          result:
            ref: '#/components/schemas/apiModule'
            value:
              extensionprops: {}
              type: object
              properties:
                ast:
                  ref: ""
                  value:
                    extensionprops: {}
                id:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                package_path:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                package_root:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                raw:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
    v2InfoResponse:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          arch:
            ref: ""
            value:
              extensionprops: {}
              type: string
          commit:
            ref: ""
            value:
              extensionprops: {}
              type: string
          date:
            ref: ""
            value:
              extensionprops: {}
              type: string
          os:
            ref: ""
            value:
              extensionprops: {}
              type: string
          version:
            ref: ""
            value:
              extensionprops: {}
              type: string
    v2IsRequest:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          identity_context:
            ref: '#/components/schemas/apiIdentityContext'
            value:
              extensionprops: {}
              type: object
              properties:
                identity:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                type:
                  ref: '#/components/schemas/apiIdentityType'
                  value:
                    extensionprops: {}
                    type: string
                    description: |-
                      Identity types, describes the payload type of the identity field inside the IdentityContext message.

                       - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
                       - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
                       - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
                       - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
                       - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
                    enum:
                      - IDENTITY_TYPE_UNKNOWN
                      - IDENTITY_TYPE_NONE
                      - IDENTITY_TYPE_SUB
                      - IDENTITY_TYPE_JWT
                      - IDENTITY_TYPE_MANUAL
                    default: IDENTITY_TYPE_UNKNOWN
          policy_context:
            ref: '#/components/schemas/apiPolicyContext'
            value:
              extensionprops: {}
              type: object
              properties:
                decisions:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: array
                    title: list (1..N) of policy decisions (aka rules)
                    items:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                path:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: policy path aka package name
          policy_instance:
            ref: '#/components/schemas/apiPolicyInstance'
            value:
              extensionprops: {}
              type: object
              properties:
                instance_label:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: label identifying the instance of the policy
                name:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: policy name
          resource_context:
            ref: ""
            value:
              extensionprops: {}
              type: object
    v2IsResponse:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          decisions:
            ref: ""
            value:
              extensionprops: {}
              type: array
              items:
                ref: '#/components/schemas/v2Decision'
                value:
                  extensionprops: {}
                  type: object
                  properties:
                    decision:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                    is:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: boolean
    v2ListPoliciesResponse:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          result:
            ref: ""
            value:
              extensionprops: {}
              type: array
              items:
                ref: '#/components/schemas/apiModule'
                value:
                  extensionprops: {}
                  type: object
                  properties:
                    ast:
                      ref: ""
                      value:
                        extensionprops: {}
                    id:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                    package_path:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                    package_root:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                    raw:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
    v2PathSeparator:
      ref: ""
      value:
        extensionprops: {}
        type: string
        title: |-
          - PATH_SEPARATOR_UNKNOWN: Value not set.
           - PATH_SEPARATOR_DOT: Dot "." path separator
           - PATH_SEPARATOR_SLASH: Slash "/" path separtor
        enum:
          - PATH_SEPARATOR_UNKNOWN
          - PATH_SEPARATOR_DOT
          - PATH_SEPARATOR_SLASH
        default: PATH_SEPARATOR_UNKNOWN
    v2QueryOptions:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          instrument:
            ref: ""
            value:
              extensionprops: {}
              type: boolean
              title: default false
          metrics:
            ref: ""
            value:
              extensionprops: {}
              type: boolean
              title: default false
          trace:
            ref: '#/components/schemas/v2TraceLevel'
            value:
              extensionprops: {}
              type: string
              title: |-
                - TRACE_LEVEL_UNKNOWN: Value not set.
                 - TRACE_LEVEL_OFF: ExplainOffV1   ExplainModeV1 = "off"
                 - TRACE_LEVEL_FULL: ExplainFullV1  ExplainModeV1 = "full"
                 - TRACE_LEVEL_NOTES: ExplainNotesV1 ExplainModeV1 = "notes"
                 - TRACE_LEVEL_FAILS: ExplainFailsV1 ExplainModeV1 = "fails"
              enum:
                - TRACE_LEVEL_UNKNOWN
                - TRACE_LEVEL_OFF
                - TRACE_LEVEL_FULL
                - TRACE_LEVEL_NOTES
                - TRACE_LEVEL_FAILS
              default: TRACE_LEVEL_UNKNOWN
          trace_summary:
            ref: ""
            value:
              extensionprops: {}
              type: boolean
              title: default false
    v2QueryRequest:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          identity_context:
            ref: '#/components/schemas/apiIdentityContext'
            value:
              extensionprops: {}
              type: object
              properties:
                identity:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                type:
                  ref: '#/components/schemas/apiIdentityType'
                  value:
                    extensionprops: {}
                    type: string
                    description: |-
                      Identity types, describes the payload type of the identity field inside the IdentityContext message.

                       - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
                       - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
                       - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
                       - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
                       - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
                    enum:
                      - IDENTITY_TYPE_UNKNOWN
                      - IDENTITY_TYPE_NONE
                      - IDENTITY_TYPE_SUB
                      - IDENTITY_TYPE_JWT
                      - IDENTITY_TYPE_MANUAL
                    default: IDENTITY_TYPE_UNKNOWN
          input:
            ref: ""
            value:
              extensionprops: {}
              type: string
          options:
            ref: '#/components/schemas/v2QueryOptions'
            value:
              extensionprops: {}
              type: object
              properties:
                instrument:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: boolean
                    title: default false
                metrics:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: boolean
                    title: default false
                trace:
                  ref: '#/components/schemas/v2TraceLevel'
                  value:
                    extensionprops: {}
                    type: string
                    title: |-
                      - TRACE_LEVEL_UNKNOWN: Value not set.
                       - TRACE_LEVEL_OFF: ExplainOffV1   ExplainModeV1 = "off"
                       - TRACE_LEVEL_FULL: ExplainFullV1  ExplainModeV1 = "full"
                       - TRACE_LEVEL_NOTES: ExplainNotesV1 ExplainModeV1 = "notes"
                       - TRACE_LEVEL_FAILS: ExplainFailsV1 ExplainModeV1 = "fails"
                    enum:
                      - TRACE_LEVEL_UNKNOWN
                      - TRACE_LEVEL_OFF
                      - TRACE_LEVEL_FULL
                      - TRACE_LEVEL_NOTES
                      - TRACE_LEVEL_FAILS
                    default: TRACE_LEVEL_UNKNOWN
                trace_summary:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: boolean
                    title: default false
          policy_context:
            ref: '#/components/schemas/apiPolicyContext'
            value:
              extensionprops: {}
              type: object
              properties:
                decisions:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: array
                    title: list (1..N) of policy decisions (aka rules)
                    items:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                path:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: policy path aka package name
          policy_instance:
            ref: '#/components/schemas/apiPolicyInstance'
            value:
              extensionprops: {}
              type: object
              properties:
                instance_label:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: label identifying the instance of the policy
                name:
                  ref: ""
                  value:
                    extensionprops: {}
                    type: string
                    title: policy name
          query:
            ref: ""
            value:
              extensionprops: {}
              type: string
          resource_context:
            ref: ""
            value:
              extensionprops: {}
              type: object
    v2QueryResponse:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          metrics:
            ref: ""
            value:
              extensionprops: {}
              type: object
          response:
            ref: ""
            value:
              extensionprops: {}
              type: object
          trace:
            ref: ""
            value:
              extensionprops: {}
              type: array
              items:
                ref: ""
                value:
                  extensionprops: {}
                  type: object
          trace_summary:
            ref: ""
            value:
              extensionprops: {}
              type: array
              items:
                ref: ""
                value:
                  extensionprops: {}
                  type: string
    v2TraceLevel:
      ref: ""
      value:
        extensionprops: {}
        type: string
        title: |-
          - TRACE_LEVEL_UNKNOWN: Value not set.
           - TRACE_LEVEL_OFF: ExplainOffV1   ExplainModeV1 = "off"
           - TRACE_LEVEL_FULL: ExplainFullV1  ExplainModeV1 = "full"
           - TRACE_LEVEL_NOTES: ExplainNotesV1 ExplainModeV1 = "notes"
           - TRACE_LEVEL_FAILS: ExplainFailsV1 ExplainModeV1 = "fails"
        enum:
          - TRACE_LEVEL_UNKNOWN
          - TRACE_LEVEL_OFF
          - TRACE_LEVEL_FULL
          - TRACE_LEVEL_NOTES
          - TRACE_LEVEL_FAILS
        default: TRACE_LEVEL_UNKNOWN
  securitySchemes:
    AuthorizerAPIKey:
      ref: ""
      value:
        extensionprops: {}
        type: apiKey
        name: authorization
        in: header
    TenantID:
      ref: ""
      value:
        extensionprops: {}
        type: apiKey
        description: Aserto Tenant ID
        name: aserto-tenant-id
        in: header
info:
  extensionprops: {}
  title: Authorizer
  description: Authorizer service
  termsOfService: https://aserto.com/terms/
  contact:
    extensionprops: {}
    name: API Support
    url: https://aserto.com/support
    email: support@aserto.com
  license:
    extensionprops: {}
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: v0.20.10
paths:
  /api/v2/authz/compile:
    extensionprops: {}
    post:
      extensionprops: {}
      tags:
        - Authorizer
      summary: Compile
      description: Executes a partial query on the loaded policy runtime.
      operationId: authorizer.compile
      requestBody:
        ref: ""
        value:
          extensionprops: {}
          required: true
          content:
            application/json:
              extensionprops: {}
              schema:
                ref: '#/components/schemas/v2CompileRequest'
                value:
                  extensionprops: {}
                  type: object
                  properties:
                    disable_inlining:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: array
                        items:
                          ref: ""
                          value:
                            extensionprops: {}
                            type: string
                    identity_context:
                      ref: '#/components/schemas/apiIdentityContext'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          identity:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                          type:
                            ref: '#/components/schemas/apiIdentityType'
                            value:
                              extensionprops: {}
                              type: string
                              description: |-
                                Identity types, describes the payload type of the identity field inside the IdentityContext message.

                                 - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
                                 - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
                                 - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
                                 - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
                                 - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
                              enum:
                                - IDENTITY_TYPE_UNKNOWN
                                - IDENTITY_TYPE_NONE
                                - IDENTITY_TYPE_SUB
                                - IDENTITY_TYPE_JWT
                                - IDENTITY_TYPE_MANUAL
                              default: IDENTITY_TYPE_UNKNOWN
                    input:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                    options:
                      ref: '#/components/schemas/v2QueryOptions'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          instrument:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: boolean
                              title: default false
                          metrics:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: boolean
                              title: default false
                          trace:
                            ref: '#/components/schemas/v2TraceLevel'
                            value:
                              extensionprops: {}
                              type: string
                              title: |-
                                - TRACE_LEVEL_UNKNOWN: Value not set.
                                 - TRACE_LEVEL_OFF: ExplainOffV1   ExplainModeV1 = "off"
                                 - TRACE_LEVEL_FULL: ExplainFullV1  ExplainModeV1 = "full"
                                 - TRACE_LEVEL_NOTES: ExplainNotesV1 ExplainModeV1 = "notes"
                                 - TRACE_LEVEL_FAILS: ExplainFailsV1 ExplainModeV1 = "fails"
                              enum:
                                - TRACE_LEVEL_UNKNOWN
                                - TRACE_LEVEL_OFF
                                - TRACE_LEVEL_FULL
                                - TRACE_LEVEL_NOTES
                                - TRACE_LEVEL_FAILS
                              default: TRACE_LEVEL_UNKNOWN
                          trace_summary:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: boolean
                              title: default false
                    policy_context:
                      ref: '#/components/schemas/apiPolicyContext'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          decisions:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: array
                              title: list (1..N) of policy decisions (aka rules)
                              items:
                                ref: ""
                                value:
                                  extensionprops: {}
                                  type: string
                          path:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: policy path aka package name
                    policy_instance:
                      ref: '#/components/schemas/apiPolicyInstance'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          instance_label:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: label identifying the instance of the policy
                          name:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: policy name
                    query:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                    resource_context:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: object
                    unknowns:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: array
                        items:
                          ref: ""
                          value:
                            extensionprops: {}
                            type: string
      responses:
        "200":
          ref: ""
          value:
            extensionprops: {}
            description: A successful response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/v2CompileResponse'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      metrics:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: object
                      result:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: object
                      trace:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: object
                      trace_summary:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
        default:
          ref: ""
          value:
            extensionprops: {}
            description: An unexpected error response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/rpcStatus'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      code:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: integer
                          format: int32
                      details:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: '#/components/schemas/protobufAny'
                            value:
                              extensionprops: {}
                              type: object
                              properties:
                                '@type':
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                      message:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
      security:
        - AuthorizerAPIKey: []
          TenantID: []
  /api/v2/authz/decisiontree:
    extensionprops: {}
    post:
      extensionprops: {}
      tags:
        - Authorizer
      summary: Decision tree
      description: Returns decision tree for given identity context.
      operationId: authorizer.decision_tree
      requestBody:
        ref: ""
        value:
          extensionprops: {}
          required: true
          content:
            application/json:
              extensionprops: {}
              schema:
                ref: '#/components/schemas/v2DecisionTreeRequest'
                value:
                  extensionprops: {}
                  type: object
                  properties:
                    identity_context:
                      ref: '#/components/schemas/apiIdentityContext'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          identity:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                          type:
                            ref: '#/components/schemas/apiIdentityType'
                            value:
                              extensionprops: {}
                              type: string
                              description: |-
                                Identity types, describes the payload type of the identity field inside the IdentityContext message.

                                 - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
                                 - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
                                 - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
                                 - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
                                 - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
                              enum:
                                - IDENTITY_TYPE_UNKNOWN
                                - IDENTITY_TYPE_NONE
                                - IDENTITY_TYPE_SUB
                                - IDENTITY_TYPE_JWT
                                - IDENTITY_TYPE_MANUAL
                              default: IDENTITY_TYPE_UNKNOWN
                    options:
                      ref: '#/components/schemas/v2DecisionTreeOptions'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          path_separator:
                            ref: '#/components/schemas/v2PathSeparator'
                            value:
                              extensionprops: {}
                              type: string
                              title: |-
                                - PATH_SEPARATOR_UNKNOWN: Value not set.
                                 - PATH_SEPARATOR_DOT: Dot "." path separator
                                 - PATH_SEPARATOR_SLASH: Slash "/" path separtor
                              enum:
                                - PATH_SEPARATOR_UNKNOWN
                                - PATH_SEPARATOR_DOT
                                - PATH_SEPARATOR_SLASH
                              default: PATH_SEPARATOR_UNKNOWN
                    policy_context:
                      ref: '#/components/schemas/apiPolicyContext'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          decisions:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: array
                              title: list (1..N) of policy decisions (aka rules)
                              items:
                                ref: ""
                                value:
                                  extensionprops: {}
                                  type: string
                          path:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: policy path aka package name
                    policy_instance:
                      ref: '#/components/schemas/apiPolicyInstance'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          instance_label:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: label identifying the instance of the policy
                          name:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: policy name
                    resource_context:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: object
      responses:
        "200":
          ref: ""
          value:
            extensionprops: {}
            description: A successful response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/v2DecisionTreeResponse'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      path:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: object
                      path_root:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
        default:
          ref: ""
          value:
            extensionprops: {}
            description: An unexpected error response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/rpcStatus'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      code:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: integer
                          format: int32
                      details:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: '#/components/schemas/protobufAny'
                            value:
                              extensionprops: {}
                              type: object
                              properties:
                                '@type':
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                      message:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
      security:
        - AuthorizerAPIKey: []
          TenantID: []
  /api/v2/authz/is:
    extensionprops: {}
    post:
      extensionprops: {}
      tags:
        - Authorizer
      summary: Is (authorized)
      description: Determines if identity context is authorized to access the resource guarded by the given policy.
      operationId: authorizer.is
      requestBody:
        ref: ""
        value:
          extensionprops: {}
          required: true
          content:
            application/json:
              extensionprops: {}
              schema:
                ref: '#/components/schemas/v2IsRequest'
                value:
                  extensionprops: {}
                  type: object
                  properties:
                    identity_context:
                      ref: '#/components/schemas/apiIdentityContext'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          identity:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                          type:
                            ref: '#/components/schemas/apiIdentityType'
                            value:
                              extensionprops: {}
                              type: string
                              description: |-
                                Identity types, describes the payload type of the identity field inside the IdentityContext message.

                                 - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
                                 - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
                                 - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
                                 - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
                                 - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
                              enum:
                                - IDENTITY_TYPE_UNKNOWN
                                - IDENTITY_TYPE_NONE
                                - IDENTITY_TYPE_SUB
                                - IDENTITY_TYPE_JWT
                                - IDENTITY_TYPE_MANUAL
                              default: IDENTITY_TYPE_UNKNOWN
                    policy_context:
                      ref: '#/components/schemas/apiPolicyContext'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          decisions:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: array
                              title: list (1..N) of policy decisions (aka rules)
                              items:
                                ref: ""
                                value:
                                  extensionprops: {}
                                  type: string
                          path:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: policy path aka package name
                    policy_instance:
                      ref: '#/components/schemas/apiPolicyInstance'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          instance_label:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: label identifying the instance of the policy
                          name:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: policy name
                    resource_context:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: object
      responses:
        "200":
          ref: ""
          value:
            extensionprops: {}
            description: A successful response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/v2IsResponse'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      decisions:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: '#/components/schemas/v2Decision'
                            value:
                              extensionprops: {}
                              type: object
                              properties:
                                decision:
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                                is:
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: boolean
        default:
          ref: ""
          value:
            extensionprops: {}
            description: An unexpected error response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/rpcStatus'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      code:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: integer
                          format: int32
                      details:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: '#/components/schemas/protobufAny'
                            value:
                              extensionprops: {}
                              type: object
                              properties:
                                '@type':
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                      message:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
      security:
        - AuthorizerAPIKey: []
          TenantID: []
  /api/v2/authz/query:
    extensionprops: {}
    post:
      extensionprops: {}
      tags:
        - Authorizer
      summary: Query
      description: Executes a rego query on the loaded policy runtime.
      operationId: authorizer.query
      requestBody:
        ref: ""
        value:
          extensionprops: {}
          required: true
          content:
            application/json:
              extensionprops: {}
              schema:
                ref: '#/components/schemas/v2QueryRequest'
                value:
                  extensionprops: {}
                  type: object
                  properties:
                    identity_context:
                      ref: '#/components/schemas/apiIdentityContext'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          identity:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                          type:
                            ref: '#/components/schemas/apiIdentityType'
                            value:
                              extensionprops: {}
                              type: string
                              description: |-
                                Identity types, describes the payload type of the identity field inside the IdentityContext message.

                                 - IDENTITY_TYPE_UNKNOWN: Unknown, value not set, requests will fail with identity type not set error.
                                 - IDENTITY_TYPE_NONE: None, no explicit identity context set, equals anonymous.
                                 - IDENTITY_TYPE_SUB: Sub(ject), identity field contains an oAUTH subject.
                                 - IDENTITY_TYPE_JWT: JWT, identity field contains a JWT access token.
                                 - IDENTITY_TYPE_MANUAL: Manual, propagates thw identity field as-is, without validation, into the input object.
                              enum:
                                - IDENTITY_TYPE_UNKNOWN
                                - IDENTITY_TYPE_NONE
                                - IDENTITY_TYPE_SUB
                                - IDENTITY_TYPE_JWT
                                - IDENTITY_TYPE_MANUAL
                              default: IDENTITY_TYPE_UNKNOWN
                    input:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                    options:
                      ref: '#/components/schemas/v2QueryOptions'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          instrument:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: boolean
                              title: default false
                          metrics:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: boolean
                              title: default false
                          trace:
                            ref: '#/components/schemas/v2TraceLevel'
                            value:
                              extensionprops: {}
                              type: string
                              title: |-
                                - TRACE_LEVEL_UNKNOWN: Value not set.
                                 - TRACE_LEVEL_OFF: ExplainOffV1   ExplainModeV1 = "off"
                                 - TRACE_LEVEL_FULL: ExplainFullV1  ExplainModeV1 = "full"
                                 - TRACE_LEVEL_NOTES: ExplainNotesV1 ExplainModeV1 = "notes"
                                 - TRACE_LEVEL_FAILS: ExplainFailsV1 ExplainModeV1 = "fails"
                              enum:
                                - TRACE_LEVEL_UNKNOWN
                                - TRACE_LEVEL_OFF
                                - TRACE_LEVEL_FULL
                                - TRACE_LEVEL_NOTES
                                - TRACE_LEVEL_FAILS
                              default: TRACE_LEVEL_UNKNOWN
                          trace_summary:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: boolean
                              title: default false
                    policy_context:
                      ref: '#/components/schemas/apiPolicyContext'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          decisions:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: array
                              title: list (1..N) of policy decisions (aka rules)
                              items:
                                ref: ""
                                value:
                                  extensionprops: {}
                                  type: string
                          path:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: policy path aka package name
                    policy_instance:
                      ref: '#/components/schemas/apiPolicyInstance'
                      value:
                        extensionprops: {}
                        type: object
                        properties:
                          instance_label:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: label identifying the instance of the policy
                          name:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
                              title: policy name
                    query:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: string
                    resource_context:
                      ref: ""
                      value:
                        extensionprops: {}
                        type: object
      responses:
        "200":
          ref: ""
          value:
            extensionprops: {}
            description: A successful response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/v2QueryResponse'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      metrics:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: object
                      response:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: object
                      trace:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: object
                      trace_summary:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: ""
                            value:
                              extensionprops: {}
                              type: string
        default:
          ref: ""
          value:
            extensionprops: {}
            description: An unexpected error response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/rpcStatus'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      code:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: integer
                          format: int32
                      details:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: '#/components/schemas/protobufAny'
                            value:
                              extensionprops: {}
                              type: object
                              properties:
                                '@type':
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                      message:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
      security:
        - AuthorizerAPIKey: []
          TenantID: []
  /api/v2/info:
    extensionprops: {}
    get:
      extensionprops: {}
      tags:
        - Info
      summary: Info
      description: Return version information.
      operationId: info.get
      responses:
        "200":
          ref: ""
          value:
            extensionprops: {}
            description: A successful response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/v2InfoResponse'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      arch:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
                      commit:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
                      date:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
                      os:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
                      version:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
        default:
          ref: ""
          value:
            extensionprops: {}
            description: An unexpected error response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/rpcStatus'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      code:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: integer
                          format: int32
                      details:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: '#/components/schemas/protobufAny'
                            value:
                              extensionprops: {}
                              type: object
                              properties:
                                '@type':
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                      message:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
      security: []
  /api/v2/policies:
    extensionprops: {}
    get:
      extensionprops: {}
      tags:
        - Policy
      summary: List Policies
      description: Lists the policy modules for the policy bundle.
      operationId: policies.list
      parameters:
        - ref: ""
          value:
            extensionprops: {}
            name: field_mask
            in: query
            schema:
              ref: ""
              value:
                extensionprops: {}
                type: string
        - ref: ""
          value:
            extensionprops: {}
            name: policy_instance.name
            in: query
            description: policy name
            schema:
              ref: ""
              value:
                extensionprops: {}
                type: string
        - ref: ""
          value:
            extensionprops: {}
            name: policy_instance.instance_label
            in: query
            description: label identifying the instance of the policy
            schema:
              ref: ""
              value:
                extensionprops: {}
                type: string
      responses:
        "200":
          ref: ""
          value:
            extensionprops: {}
            description: A successful response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/v2ListPoliciesResponse'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      result:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: '#/components/schemas/apiModule'
                            value:
                              extensionprops: {}
                              type: object
                              properties:
                                ast:
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                id:
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                                package_path:
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                                package_root:
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                                raw:
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
        default:
          ref: ""
          value:
            extensionprops: {}
            description: An unexpected error response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/rpcStatus'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      code:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: integer
                          format: int32
                      details:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: '#/components/schemas/protobufAny'
                            value:
                              extensionprops: {}
                              type: object
                              properties:
                                '@type':
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                      message:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
      security:
        - AuthorizerAPIKey: []
          TenantID: []
  /api/v2/policies/{id}:
    extensionprops: {}
    get:
      extensionprops: {}
      tags:
        - Policy
      summary: Get Policy
      description: Gets the policy modules for the given module Id.
      operationId: policies.get
      parameters:
        - ref: ""
          value:
            extensionprops: {}
            name: id
            in: path
            required: true
            schema:
              ref: ""
              value:
                extensionprops: {}
                type: string
                pattern: '[^/]+/.+'
        - ref: ""
          value:
            extensionprops: {}
            name: field_mask
            in: query
            schema:
              ref: ""
              value:
                extensionprops: {}
                type: string
        - ref: ""
          value:
            extensionprops: {}
            name: policy_instance.name
            in: query
            description: policy name
            schema:
              ref: ""
              value:
                extensionprops: {}
                type: string
        - ref: ""
          value:
            extensionprops: {}
            name: policy_instance.instance_label
            in: query
            description: label identifying the instance of the policy
            schema:
              ref: ""
              value:
                extensionprops: {}
                type: string
      responses:
        "200":
          ref: ""
          value:
            extensionprops: {}
            description: A successful response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/v2GetPolicyResponse'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      result:
                        ref: '#/components/schemas/apiModule'
                        value:
                          extensionprops: {}
                          type: object
                          properties:
                            ast:
                              ref: ""
                              value:
                                extensionprops: {}
                            id:
                              ref: ""
                              value:
                                extensionprops: {}
                                type: string
                            package_path:
                              ref: ""
                              value:
                                extensionprops: {}
                                type: string
                            package_root:
                              ref: ""
                              value:
                                extensionprops: {}
                                type: string
                            raw:
                              ref: ""
                              value:
                                extensionprops: {}
                                type: string
        default:
          ref: ""
          value:
            extensionprops: {}
            description: An unexpected error response.
            content:
              application/json:
                extensionprops: {}
                schema:
                  ref: '#/components/schemas/rpcStatus'
                  value:
                    extensionprops: {}
                    type: object
                    properties:
                      code:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: integer
                          format: int32
                      details:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: array
                          items:
                            ref: '#/components/schemas/protobufAny'
                            value:
                              extensionprops: {}
                              type: object
                              properties:
                                '@type':
                                  ref: ""
                                  value:
                                    extensionprops: {}
                                    type: string
                      message:
                        ref: ""
                        value:
                          extensionprops: {}
                          type: string
      security:
        - AuthorizerAPIKey: []
          TenantID: []
security:
  - AuthorizerAPIKey: []
    TenantID: []
servers:
  - extensionprops: {}
    url: https://authorizer.prod.aserto.com
    description: Hosted authorizer service
  - extensionprops: {}
    url: https://localhost:{port}
    description: Local authorizer service using Topaz
    variables:
      port:
        extensionprops: {}
        enum:
          - "8383"
        default: "8383"
tags:
  - extensionprops: {}
    name: Authorizer
externalDocs:
  extensionprops: {}
  description: API documentation
  url: https://docs.aserto.com
